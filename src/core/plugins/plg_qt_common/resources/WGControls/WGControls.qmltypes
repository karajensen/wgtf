import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable WGControls 2.0 ./'

Module {
    dependencies: []
    Component {
        name: "QAbstractItemModel"
        prototype: "QObject"
        Enum {
            name: "LayoutChangeHint"
            values: {
                "NoLayoutChangeHint": 0,
                "VerticalSortHint": 1,
                "HorizontalSortHint": 2
            }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
            Parameter { name: "roles"; type: "QVector<int>" }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Signal {
            name: "headerDataChanged"
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutChanged" }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutAboutToBeChanged" }
        Signal {
            name: "rowsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal { name: "modelAboutToBeReset" }
        Signal { name: "modelReset" }
        Signal {
            name: "rowsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationRow"; type: "int" }
        }
        Signal {
            name: "rowsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "row"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationColumn"; type: "int" }
        }
        Signal {
            name: "columnsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "column"; type: "int" }
        }
        Method { name: "submit"; type: "bool" }
        Method { name: "revert" }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "sibling"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "idx"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "hasChildren"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "hasChildren"; type: "bool" }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "fetchMore"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "canFetchMore"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "flags"
            type: "Qt::ItemFlags"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
            Parameter { name: "flags"; type: "Qt::MatchFlags" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component { name: "QAbstractListModel"; prototype: "QAbstractItemModel" }
    Component {
        name: "QAbstractProxyModel"
        prototype: "QAbstractItemModel"
        Property { name: "sourceModel"; type: "QAbstractItemModel"; isPointer: true }
        Method {
            name: "mapToSource"
            type: "QModelIndex"
            Parameter { name: "proxyIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapFromSource"
            type: "QModelIndex"
            Parameter { name: "sourceIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapSelectionToSource"
            type: "QItemSelection"
            Parameter { name: "selection"; type: "QItemSelection" }
        }
        Method {
            name: "mapSelectionFromSource"
            type: "QItemSelection"
            Parameter { name: "selection"; type: "QItemSelection" }
        }
    }
    Component {
        name: "QQuickItem"
        defaultProperty: "data"
        prototype: "QObject"
        Enum {
            name: "TransformOrigin"
            values: {
                "TopLeft": 0,
                "Top": 1,
                "TopRight": 2,
                "Left": 3,
                "Center": 4,
                "Right": 5,
                "BottomLeft": 6,
                "Bottom": 7,
                "BottomRight": 8
            }
        }
        Property { name: "parent"; type: "QQuickItem"; isPointer: true }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "resources"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "children"; type: "QQuickItem"; isList: true; isReadonly: true }
        Property { name: "x"; type: "double" }
        Property { name: "y"; type: "double" }
        Property { name: "z"; type: "double" }
        Property { name: "width"; type: "double" }
        Property { name: "height"; type: "double" }
        Property { name: "opacity"; type: "double" }
        Property { name: "enabled"; type: "bool" }
        Property { name: "visible"; type: "bool" }
        Property { name: "visibleChildren"; type: "QQuickItem"; isList: true; isReadonly: true }
        Property { name: "states"; type: "QQuickState"; isList: true; isReadonly: true }
        Property { name: "transitions"; type: "QQuickTransition"; isList: true; isReadonly: true }
        Property { name: "state"; type: "string" }
        Property { name: "childrenRect"; type: "QRectF"; isReadonly: true }
        Property { name: "anchors"; type: "QQuickAnchors"; isReadonly: true; isPointer: true }
        Property { name: "left"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "right"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "horizontalCenter"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "top"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "bottom"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "verticalCenter"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "baseline"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "baselineOffset"; type: "double" }
        Property { name: "clip"; type: "bool" }
        Property { name: "focus"; type: "bool" }
        Property { name: "activeFocus"; type: "bool"; isReadonly: true }
        Property { name: "activeFocusOnTab"; revision: 1; type: "bool" }
        Property { name: "rotation"; type: "double" }
        Property { name: "scale"; type: "double" }
        Property { name: "transformOrigin"; type: "TransformOrigin" }
        Property { name: "transformOriginPoint"; type: "QPointF"; isReadonly: true }
        Property { name: "transform"; type: "QQuickTransform"; isList: true; isReadonly: true }
        Property { name: "smooth"; type: "bool" }
        Property { name: "antialiasing"; type: "bool" }
        Property { name: "implicitWidth"; type: "double" }
        Property { name: "implicitHeight"; type: "double" }
        Property { name: "layer"; type: "QQuickItemLayer"; isReadonly: true; isPointer: true }
        Signal {
            name: "childrenRectChanged"
            Parameter { type: "QRectF" }
        }
        Signal {
            name: "baselineOffsetChanged"
            Parameter { type: "double" }
        }
        Signal {
            name: "stateChanged"
            Parameter { type: "string" }
        }
        Signal {
            name: "focusChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "activeFocusChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "activeFocusOnTabChanged"
            revision: 1
            Parameter { type: "bool" }
        }
        Signal {
            name: "parentChanged"
            Parameter { type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "transformOriginChanged"
            Parameter { type: "TransformOrigin" }
        }
        Signal {
            name: "smoothChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "antialiasingChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "clipChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "windowChanged"
            revision: 1
            Parameter { name: "window"; type: "QQuickWindow"; isPointer: true }
        }
        Method { name: "update" }
        Method {
            name: "grabToImage"
            revision: 2
            type: "bool"
            Parameter { name: "callback"; type: "QJSValue" }
            Parameter { name: "targetSize"; type: "QSize" }
        }
        Method {
            name: "grabToImage"
            revision: 2
            type: "bool"
            Parameter { name: "callback"; type: "QJSValue" }
        }
        Method {
            name: "contains"
            type: "bool"
            Parameter { name: "point"; type: "QPointF" }
        }
        Method {
            name: "mapFromItem"
            Parameter { type: "QQmlV4Function"; isPointer: true }
        }
        Method {
            name: "mapToItem"
            Parameter { type: "QQmlV4Function"; isPointer: true }
        }
        Method { name: "forceActiveFocus" }
        Method {
            name: "forceActiveFocus"
            Parameter { name: "reason"; type: "Qt::FocusReason" }
        }
        Method {
            name: "nextItemInFocusChain"
            revision: 1
            type: "QQuickItem*"
            Parameter { name: "forward"; type: "bool" }
        }
        Method { name: "nextItemInFocusChain"; revision: 1; type: "QQuickItem*" }
        Method {
            name: "childAt"
            type: "QQuickItem*"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
        }
    }
    Component { name: "wgt::IListAdapter"; prototype: "QAbstractListModel" }
    Component {
        name: "wgt::IModelExtensionOld"
        prototype: "QObject"
        exports: [
            "WGControls/AssetItemExtension 1.0",
            "WGControls/ButtonsDefinitionExtension 1.0",
            "WGControls/ButtonsModelExtension 1.0",
            "WGControls/ColumnExtension 1.0",
            "WGControls/ComponentExtension 1.0",
            "WGControls/HeaderFooterTextExtension 1.0",
            "WGControls/ThumbnailExtension 1.0"
        ]
        exportMetaObjectRevisions: [0, 0, 0, 0, 0, 0, 0]
        Method {
            name: "onDataAboutToBeChanged"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "onDataChanged"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "onLayoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Method {
            name: "onLayoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Method {
            name: "onRowsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method {
            name: "onRowsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method {
            name: "onRowsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method {
            name: "onRowsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
    }
    Component {
        name: "wgt::QSortFilterProxyModel"
        prototype: "QAbstractProxyModel"
        Property { name: "filterRegExp"; type: "QRegExp" }
        Property { name: "filterKeyColumn"; type: "int" }
        Property { name: "dynamicSortFilter"; type: "bool" }
        Property { name: "filterCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "sortCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "isSortLocaleAware"; type: "bool" }
        Property { name: "sortRole"; type: "int" }
        Property { name: "filterRole"; type: "int" }
        Method {
            name: "setFilterRegExp"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterWildcard"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterFixedString"
            Parameter { name: "pattern"; type: "string" }
        }
        Method { name: "clear" }
        Method { name: "invalidate" }
    }
    Component {
        name: "wgt::QmlListModel"
        defaultProperty: "rows"
        prototype: "wgt::QtListModel"
        exports: ["WGControls/WGListModel 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "header"; type: "QmlModelRow"; isPointer: true }
        Property { name: "rows"; type: "wgt::QmlModelRow"; isList: true; isReadonly: true }
    }
    Component {
        name: "wgt::QmlModelData"
        prototype: "QObject"
        exports: ["WGControls/WGModelData 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "roles"; type: "QVariantMap" }
    }
    Component {
        name: "wgt::QmlModelRow"
        defaultProperty: "columns"
        prototype: "QObject"
        exports: ["WGControls/WGModelRow 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "columns"; type: "wgt::QmlModelData"; isList: true; isReadonly: true }
        Property { name: "children"; type: "wgt::QmlModelRow"; isList: true; isReadonly: true }
        Signal {
            name: "columnAdded"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "column"; type: "QmlModelData"; isPointer: true }
        }
        Signal {
            name: "columnChanged"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "column"; type: "QmlModelData"; isPointer: true }
        }
        Signal { name: "columnsCleared" }
        Signal {
            name: "addingChild"
            Parameter { name: "child"; type: "QmlModelRow"; isPointer: true }
        }
        Signal {
            name: "childAdded"
            Parameter { name: "child"; type: "QmlModelRow"; isPointer: true }
        }
        Signal {
            name: "clearingChildren"
            Parameter { name: "parent"; type: "QmlModelRow"; isPointer: true }
        }
        Signal {
            name: "childrenCleared"
            Parameter { name: "parent"; type: "QmlModelRow"; isPointer: true }
        }
    }
    Component {
        name: "wgt::QmlTableModel"
        defaultProperty: "rows"
        prototype: "wgt::QtTableModel"
        exports: ["WGControls/WGTableModel 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "header"; type: "QmlModelRow"; isPointer: true }
        Property { name: "rows"; type: "wgt::QmlModelRow"; isList: true; isReadonly: true }
    }
    Component {
        name: "wgt::QmlTreeModel"
        defaultProperty: "rows"
        prototype: "wgt::QtTreeModel"
        exports: ["WGControls/WGTreeModel 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "header"; type: "QmlModelRow"; isPointer: true }
        Property { name: "rows"; type: "wgt::QmlModelRow"; isList: true; isReadonly: true }
    }
    Component {
        name: "wgt::QtAbstractItemModel"
        prototype: "QAbstractItemModel"
        Method {
            name: "itemToIndex"
            type: "QModelIndex"
            Parameter { name: "item"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "indexToItem"
            type: "QObject*"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "item"
            type: "QObject*"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "parent"
            type: "QObject*"
            Parameter { name: "child"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "rowIndex"
            type: "int"
            Parameter { name: "item"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "columnIndex"
            type: "int"
            Parameter { name: "item"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "hasChildren"
            type: "bool"
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "insertRow"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "insertColumn"
            type: "bool"
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "removeRow"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "removeColumn"
            type: "bool"
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "moveRow"
            type: "bool"
            Parameter { name: "sourceParent"; type: "QObject"; isPointer: true }
            Parameter { name: "sourceRow"; type: "int" }
            Parameter { name: "destinationParent"; type: "QObject"; isPointer: true }
            Parameter { name: "destinationChild"; type: "int" }
        }
        Method {
            name: "flags"
            type: "Qt::ItemFlags"
            Parameter { name: "index"; type: "QModelIndex" }
        }
    }
    Component {
        name: "wgt::QtListModel"
        prototype: "wgt::QtAbstractItemModel"
        Method {
            name: "item"
            type: "QObject*"
            Parameter { name: "row"; type: "int" }
        }
        Method { name: "count"; type: "int" }
        Method {
            name: "insertItem"
            type: "bool"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "removeItem"
            type: "bool"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "moveItem"
            type: "bool"
            Parameter { name: "sourceRow"; type: "int" }
            Parameter { name: "destinationRow"; type: "int" }
        }
    }
    Component {
        name: "wgt::QtTableModel"
        prototype: "wgt::QtAbstractItemModel"
        Method {
            name: "item"
            type: "QObject*"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method { name: "rowCount"; type: "int" }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "insertRow"
            type: "bool"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "insertColumn"
            type: "bool"
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "removeRow"
            type: "bool"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "removeColumn"
            type: "bool"
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "moveRow"
            type: "bool"
            Parameter { name: "sourceRow"; type: "int" }
            Parameter { name: "destinationRow"; type: "int" }
        }
    }
    Component {
        name: "wgt::QtTreeModel"
        prototype: "wgt::QtAbstractItemModel"
        Method {
            name: "item"
            type: "QObject*"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "count"
            type: "int"
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "insertItem"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "removeItem"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "moveItem"
            type: "bool"
            Parameter { name: "sourceParent"; type: "QObject"; isPointer: true }
            Parameter { name: "sourceRow"; type: "int" }
            Parameter { name: "destinationParent"; type: "QObject"; isPointer: true }
            Parameter { name: "destinationRow"; type: "int" }
        }
    }
    Component {
        name: "wgt::SelectionExtension"
        prototype: "wgt::IModelExtensionOld"
        exports: ["WGControls/SelectionExtension 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "selectedIndex"; type: "QVariant" }
        Property { name: "selectedItem"; type: "QVariant"; isReadonly: true }
        Property { name: "multiSelect"; type: "bool" }
        Property { name: "currentIndex"; type: "QVariant" }
        Signal { name: "selectionChanged" }
        Method { name: "clearOnNextSelect" }
        Method { name: "prepareRangeSelect" }
        Method { name: "getSelection"; type: "QVariantList" }
        Method { name: "moveUp"; type: "bool" }
        Method { name: "moveDown"; type: "bool" }
        Method {
            name: "indexInSelection"
            type: "bool"
            Parameter { name: "index"; type: "QVariant" }
        }
    }
    Component {
        name: "wgt::SelectionHelper"
        prototype: "QObject"
        exports: [
            "WGControls/WGSelectionHelper 1.0",
            "WGControls/WGSelectionHelper 2.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "source"; type: "QVariant" }
        Method {
            name: "select"
            Parameter { name: "selectionList"; type: "QModelIndexList" }
        }
    }
    Component {
        name: "wgt::TreeExtensionOld"
        prototype: "wgt::IModelExtensionOld"
        exports: ["WGControls/TreeExtension 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "currentIndex"; type: "QVariant" }
        Property { name: "blockSelection"; type: "bool" }
        Property { name: "selectionExtension"; type: "QObject"; isPointer: true }
        Method { name: "moveUp"; type: "bool" }
        Method { name: "moveDown"; type: "bool" }
        Method { name: "moveLeft"; type: "bool" }
        Method { name: "moveRight"; type: "bool" }
        Method { name: "selectItem" }
    }
    Component {
        name: "wgt::ValueExtension"
        defaultProperty: "roles"
        prototype: "wgt::IModelExtensionOld"
        exports: ["WGControls/ValueExtension 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "roles"; type: "string"; isList: true; isReadonly: true }
    }
    Component {
        name: "wgt::WGAction"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["WGControls/WGAction 1.0", "WGControls/WGAction 2.0"]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "active"; type: "bool" }
        Property { name: "actionId"; type: "string" }
        Property { name: "actionText"; type: "string" }
        Property { name: "actionPath"; type: "string" }
        Property { name: "checkable"; type: "bool" }
        Property { name: "checked"; type: "bool" }
        Property { name: "enabled"; type: "bool" }
        Property { name: "visible"; type: "bool" }
        Property { name: "contextObject"; type: "QVariant" }
        Signal { name: "triggered" }
        Signal { name: "dataChanged" }
    }
    Component {
        name: "wgt::WGColumnLayoutProxy"
        prototype: "QAbstractProxyModel"
        exports: [
            "WGControls/WGColumnLayoutProxy 1.0",
            "WGControls/WGColumnLayoutProxy 2.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "columnSequence"; type: "QList<int>" }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "hasChildren"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "hasChildren"; type: "bool" }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
    }
    Component {
        name: "wgt::WGContextMenu"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: [
            "WGControls/WGContextMenu 1.0",
            "WGControls/WGContextMenu 2.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "path"; type: "string" }
        Property { name: "contextObject"; type: "QVariant" }
        Signal { name: "aboutToShow" }
        Signal { name: "aboutToHide" }
        Signal { name: "opened" }
        Method { name: "popup" }
    }
    Component {
        name: "wgt::WGContextMenuSimple"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: [
            "WGControls/WGContextMenu 1.0",
            "WGControls/WGContextMenu 2.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "path"; type: "string" }
        Property { name: "contextObject"; type: "QVariant" }
        Signal { name: "aboutToShow" }
        Signal { name: "aboutToHide" }
        Signal { name: "opened" }
        Method { name: "popup" }
    }
    Component {
        name: "wgt::WGFilter"
        prototype: "QObject"
        exports: ["WGControls/WGFilter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "itemRole"; type: "string" }
    }
    Component {
        name: "wgt::WGFilteredListModel"
        defaultProperty: "extensions"
        prototype: "wgt::WGListModel"
        exports: ["WGControls/WGFilteredListModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "filter"; type: "QObject"; isPointer: true }
        Property { name: "isFiltering"; type: "bool"; isReadonly: true }
        Signal { name: "filteringBegin" }
        Signal { name: "filteringEnd" }
    }
    Component {
        name: "wgt::WGFilteredTreeModel"
        defaultProperty: "extensions"
        prototype: "wgt::WGTreeModel"
        exports: ["WGControls/WGFilteredTreeModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "filter"; type: "QObject"; isPointer: true }
    }
    Component {
        name: "wgt::WGItemView"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["WGControls/WGItemView 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "model"; type: "QAbstractItemModel"; isPointer: true }
        Property { name: "extensions"; type: "wgt::QtModelExtension"; isList: true; isReadonly: true }
        Property { name: "extendedModel"; type: "QAbstractItemModel"; isReadonly: true; isPointer: true }
        Property { name: "headerRowModel"; type: "QAbstractItemModel"; isReadonly: true; isPointer: true }
        Property { name: "modelRowCount"; type: "int"; isReadonly: true }
        Property { name: "modelColumnCount"; type: "int"; isReadonly: true }
        Signal { name: "rowCountChanged" }
        Signal { name: "columnCountChanged" }
        Method {
            name: "getRow"
            type: "int"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "getColumn"
            type: "int"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "getParent"
            type: "QModelIndex"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "sourceColumn"
            type: "int"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "hideColumn"
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "showAllColumns" }
        Method {
            name: "sourceIndex"
            type: "QModelIndex"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "extendedIndex"
            type: "QModelIndex"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method { name: "mimeTypes"; type: "QStringList" }
        Method {
            name: "mimeData"
            type: "QVariantMap"
            Parameter { name: "indexes"; type: "QList<QModelIndex>" }
        }
        Method {
            name: "canDropMimeData"
            type: "bool"
            Parameter { name: "data"; type: "QVariantMap" }
            Parameter { name: "action"; type: "Qt::DropAction" }
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "dropMimeData"
            type: "bool"
            Parameter { name: "data"; type: "QVariantMap" }
            Parameter { name: "action"; type: "Qt::DropAction" }
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "headerMimeTypes"
            type: "QStringList"
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "headerMimeData"
            type: "QVariantMap"
            Parameter { name: "sections"; type: "QList<int>" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "canDropHeaderMimeData"
            type: "bool"
            Parameter { name: "data"; type: "QVariantMap" }
            Parameter { name: "action"; type: "Qt::DropAction" }
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "dropHeaderMimeData"
            type: "bool"
            Parameter { name: "data"; type: "QVariantMap" }
            Parameter { name: "action"; type: "Qt::DropAction" }
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "createExtension"
            type: "wgt::QtModelExtension*"
            Parameter { name: "name"; type: "string" }
        }
    }
    Component {
        name: "wgt::WGListModel"
        defaultProperty: "extensions"
        prototype: "QAbstractListModel"
        exports: ["WGControls/WGListModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QVariant" }
        Property { name: "extensions"; type: "wgt::IModelExtensionOld"; isList: true; isReadonly: true }
        Signal {
            name: "headerDataChanged"
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "itemDataAboutToBeChanged"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "itemDataChanged"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "headerDataChangedThread"
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "itemDataAboutToBeChangedThread"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "itemDataChangedThread"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "rowsAboutToBeInsertedThread"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsInsertedThread"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsAboutToBeRemovedThread"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsRemovedThread"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method { name: "canClear"; type: "bool" }
        Method { name: "clear" }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "indexRow"
            type: "int"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "find"
            type: "QModelIndex"
            Parameter { name: "data"; type: "QVariant" }
            Parameter { name: "roleName"; type: "string" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "column"; type: "int" }
            Parameter { name: "roleName"; type: "string" }
        }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "roleName"; type: "string" }
        }
    }
    Component {
        name: "wgt::WGMergeProxy"
        prototype: "QAbstractItemModel"
        exports: ["WGControls/WGMergeProxy 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "orientation"; type: "Qt::Orientation" }
        Method {
            name: "addModel"
            Parameter { name: "model"; type: "QAbstractItemModel"; isPointer: true }
            Parameter { name: "index"; type: "int" }
            Parameter { name: "roleName"; type: "string" }
        }
        Method {
            name: "addModel"
            Parameter { name: "model"; type: "QAbstractItemModel"; isPointer: true }
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "addModel"
            Parameter { name: "model"; type: "QAbstractItemModel"; isPointer: true }
        }
        Method {
            name: "removeModel"
            Parameter { name: "model"; type: "QAbstractItemModel"; isPointer: true }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
    }
    Component {
        name: "wgt::WGMultiEditProxy"
        prototype: "QAbstractItemModel"
        exports: ["WGControls/WGMultiEditProxy 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "mergeKeys"; type: "QList<QString>" }
        Method {
            name: "addModel"
            Parameter { name: "model"; type: "QAbstractItemModel"; isPointer: true }
        }
        Method {
            name: "removeModel"
            Parameter { name: "model"; type: "QAbstractItemModel"; isPointer: true }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        name: "wgt::WGRangeProxy"
        prototype: "QAbstractProxyModel"
        exports: ["WGControls/WGRangeProxy 2.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "rowsChanged"
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsChanged"
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method {
            name: "mapToSource"
            type: "QModelIndex"
            Parameter { name: "proxyIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapFromSource"
            type: "QModelIndex"
            Parameter { name: "sourceIndex"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "hasChildren"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "hasChildren"; type: "bool" }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "setRange"
            Parameter { name: "top"; type: "int" }
            Parameter { name: "left"; type: "int" }
            Parameter { name: "bottom"; type: "int" }
            Parameter { name: "right"; type: "int" }
        }
    }
    Component {
        name: "wgt::WGSortFilterProxy"
        prototype: "wgt::QSortFilterProxyModel"
        exports: ["WGControls/WGSortFilterProxy 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "sortObject"; type: "QObject"; isPointer: true }
        Property { name: "filterObject"; type: "QObject"; isPointer: true }
        Signal { name: "beforeSort" }
        Signal { name: "afterSort" }
        Method {
            name: "mapToSource"
            type: "QModelIndex"
            Parameter { name: "proxyIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapFromSource"
            type: "QModelIndex"
            Parameter { name: "sourceIndex"; type: "QModelIndex" }
        }
        Method {
            name: "sort"
            Parameter { name: "column"; type: "int" }
            Parameter { name: "order"; type: "Qt::SortOrder" }
        }
        Method {
            name: "sort"
            Parameter { name: "column"; type: "int" }
        }
        Method { name: "invalidateFilter" }
    }
    Component {
        name: "wgt::WGStringFilter"
        prototype: "wgt::WGFilter"
        exports: ["WGControls/WGStringFilter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "filterText"; type: "string" }
    }
    Component {
        name: "wgt::WGSubProxy"
        prototype: "QAbstractProxyModel"
        exports: ["WGControls/WGSubProxy 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "sourceParent"; type: "QModelIndex" }
        Method {
            name: "mapToSource"
            type: "QModelIndex"
            Parameter { name: "proxyIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapFromSource"
            type: "QModelIndex"
            Parameter { name: "sourceIndex"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "hasChildren"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "hasChildren"; type: "bool" }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
    }
    Component {
        name: "wgt::WGTokenizedStringFilter"
        prototype: "wgt::WGFilter"
        exports: ["WGControls/WGTokenizedStringFilter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "filterText"; type: "string" }
        Property { name: "splitterChar"; type: "string" }
    }
    Component {
        name: "wgt::WGTransposeProxy"
        prototype: "QAbstractProxyModel"
        exports: ["WGControls/WGTransposeProxy 2.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "mapToSource"
            type: "QModelIndex"
            Parameter { name: "proxyIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapFromSource"
            type: "QModelIndex"
            Parameter { name: "sourceIndex"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "hasChildren"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "hasChildren"; type: "bool" }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
    }
    Component {
        name: "wgt::WGTreeListAdapter"
        defaultProperty: "extensions"
        prototype: "wgt::IListAdapter"
        exports: ["WGControls/WGTreeListAdapter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "parentIndex"; type: "QVariant" }
        Property { name: "extensions"; type: "wgt::IModelExtensionOld"; isList: true; isReadonly: true }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "indexRow"
            type: "int"
            Parameter { name: "index"; type: "QModelIndex" }
        }
    }
    Component {
        name: "wgt::WGTreeModel"
        defaultProperty: "extensions"
        prototype: "QAbstractItemModel"
        exports: ["WGControls/WGTreeModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QVariant" }
        Property { name: "extensions"; type: "wgt::IModelExtensionOld"; isList: true; isReadonly: true }
        Signal {
            name: "headerDataChanged"
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "itemDataAboutToBeChanged"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "itemDataChanged"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "headerDataChangedThread"
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "itemDataAboutToBeChangedThread"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "itemDataChangedThread"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "rowsAboutToBeInsertedThread"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsInsertedThread"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsAboutToBeRemovedThread"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsRemovedThread"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "convertItemToIndex"
            type: "QModelIndex"
            Parameter { name: "item"; type: "QVariant" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "column"; type: "int" }
            Parameter { name: "roleName"; type: "string" }
        }
    }
}
